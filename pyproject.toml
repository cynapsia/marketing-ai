[project]
name = "marketing-ai-platform"
version = "0.1.0"
description = "Plataforma de Marketing com Agentes de IA"
authors = [
    {name = "Equipe de Desenvolvimento", email = "dev@example.com"}
]
dependencies = [
    "langchain>=0.1.0",
    "langgraph>=0.0.10",
    "dspy-ai>=2.0.0",
    "google-cloud-aiplatform>=1.36.0",
    "minio>=7.2.0",
    "pynessie>=0.62.0",
    "qdrant-client[async]>=1.7.0",
    "pyarrow>=14.0.0",
    "mlflow-skinny>=2.9.0",
    "google-cloud-pubsub[grpc]>=2.18.0",
    "httpx>=0.25.0",
    "pydantic>=2.5.0",
    "logfire-ai>=0.1.0",
    "great-expectations>=0.18.0",
    "scipy>=1.11.0",
    "ortools>=9.7.0",
    "matplotlib>=3.8.0",
    "networkx>=3.2.0",
    "graphviz>=0.20.0",
    "plotly>=5.18.0",
    "scikit-learn>=1.3.0",
    "umap-learn>=0.5.5",
    "typer>=0.9.0",
    "pyyaml>=6.0.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "YTT",# flake8-2020
    "RUF",# Ruff-specific
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langgraph.*",
    "dspy.*",
    "google.*",
    "minio.*",
    "pynessie.*",
    "qdrant_client.*",
    "pyarrow.*",
    "mlflow.*",
    "httpx.*",
    "pydantic.*",
    "logfire.*",
    "great_expectations.*",
    "scipy.*",
    "ortools.*",
    "matplotlib.*",
    "networkx.*",
    "graphviz.*",
    "plotly.*",
    "sklearn.*",
    "umap.*",
    "typer.*",
    "yaml.*",
    "pytest.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
